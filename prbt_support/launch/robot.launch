<?xml version="1.0"?>
<launch>	

  <arg name="gripper" default="" />
  <arg name="load_robot_description" default="true" />
  <arg name="sto" default="pnoz"/>

  <!-- send urdf to param server -->
  <param name="robot_description" if="$(arg load_robot_description)"
    command="$(find xacro)/xacro --inorder '$(find prbt_support)/urdf/prbt.xacro' gripper:=$(arg gripper)" />

  <!-- robot state publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" />

  <!-- relay to /joint_states -->
  <node ns="prbt" name="joint_state_relay" pkg="topic_tools" type="relay" args="/prbt/joint_states /joint_states"/>

  <!-- start the driver -->
  <node ns="prbt" name="driver" pkg="canopen_motor_node" type="canopen_motor_node" output="screen" clear_params="true">
    <rosparam command="load" file="$(find prbt_support)/config/can0.yaml" />
    <rosparam command="load" file="$(find prbt_support)/config/manipulator_driver.yaml" />

    <!-- allow can grippers to interfere with the canopen_motor_node parameters -->
    <rosparam unless="$(eval not arg('gripper'))" command="load"
              file="$(eval find('prbt_'+ gripper + '_support') + '/config/gripper_driver_canopen_motor_node.yaml')" />
  </node>

  <!-- load controller configuration -->
  <rosparam ns="prbt" command="load" file="$(find prbt_support)/config/manipulator_controller.yaml" />
  <rosparam unless="$(eval not arg('gripper'))" ns="prbt" command="load"
            file="$(eval find('prbt_'+ gripper + '_support') + '/config/gripper_controller.yaml')" />

  <!-- spawn controllers -->
  <node if="$(eval not arg('gripper'))" ns="prbt" name="controller_spawner" pkg="controller_manager" type="spawner"
        args="manipulator_joint_trajectory_controller manipulator_joint_state_controller" />
  <node unless="$(eval not arg('gripper'))" ns="prbt" name="controller_spawner" pkg="controller_manager" type="spawner"
        args="manipulator_joint_trajectory_controller manipulator_joint_state_controller gripper_joint_trajectory_controller" />

  <!-- Initialize controllers and start STO-processing (if configured) -->
  <group if="$(eval sto == 'pnoz')" >
    <node pkg="rosservice" type="rosservice" name="robot_init" args="call --wait /prbt/driver/init"/>
    <include file="$(find prbt_hardware_support)/launch/modbus_read_client.launch" />
    <include file="$(find prbt_hardware_support)/launch/sto_modbus_adapter_node.launch" />
  </group>

  <group if="$(eval sto == 'none')" >
    <node pkg="rosservice" type="rosservice" name="robot_init" args="call --wait /prbt/driver/init"/>
  </group>

</launch>


